# Funktion um die Netzwerk Konfiguration zu schreiben{{{
# mehrere Routen werden nicht unterstützt
#
# usage: net_config
#
net_config ()
{
# Funktion default_route{{{
#
default_route ()
{
	if [ -n "$GATE" ] ; then
		route del default gw $GATE dev $ETH
		route add default gw $GATE dev $ETH
	fi
}
#}}}
	# Konfiguration Debian{{{
	#
	if [ $OS = Debian ] ; then
		if [ "$STARTMODE" = static ] ; then
			#Statische IP{{{
			awk '/(iface|auto)/{if(/'"$ETH"'/){found=1}else{found=0}}
			{if(!found){print}}
			END{print "\nauto '"$ETH"'\niface '"$ETH"' inet '"$STARTMODE"'\n \
	address '"$IP"'\n \
	netmask	'"${NM#*:}"'\n \
	broadcast '"${BC#*:}"'\n \
	network	'"${IP%.*}.0"'\n \
	up route add default gw '"$GATE"'\n \
	down route del default gw '"$GATE"'"}' $NET_CONF_FILE >${NET_CONF_FILE}$$
	 		mv ${NET_CONF_FILE}$$ $NET_CONF_FILE
			#}}}
		else
			# dynamische IP{{{
			awk '/(iface|auto)/{if(/'"$ETH"'/){found=1}else{found=0}}
			{if(!found){print}}
			END{print "\nauto '"$ETH"'\niface '"$ETH"' inet dhcp\n\"}' $NET_CONF_FILE >${NET_CONF_FILE}$$
	 		mv ${NET_CONF_FILE}$$ $NET_CONF_FILE
		#}}}
		fi
	fi
	#}}}
	# Redhat Konfiguration{{{
	#
	if [ $OS = Redhat ] ; then
		if [ "$STARTMODE" = static ] ; then
			# Statische IP{{{
			> $NET_CONF_FILE <<< "# Beginn $NET_CONF_FILE
#
# The network interface
DEVICE=$ETH
BOOTPROTO=$STARTMODE
ONBOOT=yes
IPADDR=${IP}
NETMASK=${NM#*:}
USERCTL=no
PEERDNS=no
GATEWAY=$GATE
TYPE=Ethernet
NETWORK=${IP%.*}.0
BROADCAST=${BC#*:}"
			#
			default_route
			if [ -f $NET_FILE ] ; then
				sed -e "s/NETWORKING.*/NETWORKING=yes/" $NET_FILE >$NET_FILE$$
				mv $NET_FILE$$ $NET_FILE
			fi
			# Konfigurationsdatei loeschen, fuer dhcp
			if [ -f "$NET_CONF_SCFILE" ] ; then
				rm -f "$NET_CONF_SCFILE" >/dev/null 2>&1
			fi
			#}}}
		else
			# dynamische IP{{{
			> $NET_CONF_SCFILE <<< "# Beginn $NET_CONF_SCFILE
#
# The network interface
DEVICE=$ETH
BOOTPROTO=$STARTMODE
ONBOOT=yes
USERCTL=no
PEERDNS=no
TYPE=Ethernet"
			if [ -f $NET_FILE ] ; then
				sed -e "s/NETWORKING.*/NETWORKING=yes/" $NET_FILE >$NET_FILE$$
				mv $NET_FILE$$ $NET_FILE
			fi
			# Konfigurationsdatei loeschen, fuer statische IP's
			if [ -f "$NET_CONF_FILE" ] ; then
				rm -f "$NET_CONF_FILE" >/dev/null 2>&1
			fi
			#}}}
		fi
	fi
	#}}}
	# CentOS Konfiguration{{{
	#
	if [ $OS = Centos ] ; then
		if [ "$STARTMODE" = static ] ; then
			# Statische IP{{{
			> $NET_CONF_FILE <<< "# Beginn $NET_CONF_FILE
#
# The network interface
DEVICE=$ETH
HWADDR="$HWADDR"
ONBOOT=yes
TYPE=Ethernet
DHCP_HOSTNAME="$HOSTNAME"
IPADDR=${IP}
NETMASK=${NM#*:}
GATEWAY=$GATE"
			#
			default_route
			if [ -f $NET_FILE ] ; then
				sed -e "s/NETWORKING.*/NETWORKING=yes/" $NET_FILE >$NET_FILE$$
				mv $NET_FILE$$ $NET_FILE
			fi
			# Konfigurationsdatei loeschen, fuer dhcp
			if [ -f "$NET_CONF_SCFILE" ] ; then
				rm -f "$NET_CONF_SCFILE" >/dev/null 2>&1
			fi
			#}}}
		else
			# dynamische IP{{{
			> $NET_CONF_SCFILE <<< "# Beginn $NET_CONF_SCFILE
#
# The network interface
TYPE=Ethernet
DEVICE=$ETH
HWADDR="$HWADDR"
ONBOOT=yes
DHCP_HOSTNAME="$HOSTNAME"
BOOTPROTO="$STARTMODE""
			if [ -f $NET_FILE ] ; then
				sed -e "s/NETWORKING.*/NETWORKING=yes/" $NET_FILE >$NET_FILE$$
				mv $NET_FILE$$ $NET_FILE
			fi
			# Konfigurationsdatei loeschen, fuer statische IP's
			if [ -f "$NET_CONF_FILE" ] ; then
				rm -f "$NET_CONF_FILE" >/dev/null 2>&1
			fi
			#}}}
		fi
	fi
	#}}}
}
#}}}
### Modeline {{{
### vim:ft=zsh:foldmethod=marker
### vim:set ts=4:                                                                               
### }}}
