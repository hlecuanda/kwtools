# Funktion kwecryptfs_conf# {{{
#
# benötigt die Funktion kwecryptfs_config
#
# usage: kwecryptfs_conf [ -c ]
# -c - only configuration
#
kwecryptfs_conf() {
	lv_Cipher=$(gettext 'Chiffrierungstyp')
	lv_Filename_Encrypt=$(gettext 'Dateinamenverschlüsselung')
	lv_Passthrough=$(gettext 'unverschlüsselte Dateien')
	lv_Keysize=$(gettext 'Schlüsselgrösse')
	lv_Keyring=$(gettext 'Schlüsselring')
	lv_Mountp=$(gettext 'Mountpunkt')
	lv_Mountverz=$(gettext 'Mountverz')
	lv_Noauto=$(gettext 'Noauto')
	lv_Nosigcache=$(gettext 'kein Signatur Cache')
	lv_Unlink_Sigs=$(gettext 'Passphrase löschen')
	lv_Version=$(gettext 'Versionsanzeige')
	lv_Xattr=$(gettext 'Attribute')
	#
	unset -- KONF OPT
	if [ "${argv[1]}" = -c ] ; then
		KONF=yes
	fi
	#
	# Funktion conf_menu# {{{
	conf_menu() {
		if [ "$KONF" = yes ] ; then
			KONF_MENU=($lv_Xattr \"$XATTR\" $lv_Cipher \"${CIPHER:-aes}\"
			$lv_Filename_Encrypt \"$FILENAME_ENCRYPT\"
			$lv_Mountverz \"$MOUNT_PATH\" $lv_Keysize \"${KEY_SIZE:-16}\"
			$lv_Keyring \"$KEYRING\"
			$lv_Keytyp \"$KEY_TYPE\" $lv_Noauto \"$NOAUTO\"
			\"$lv_Nosigcache\" \"$NO_SIG_CACHE\"
			\"$lv_Passthrough\" \"${PASSTHROUGH:-no}\"
			\"$lv_Unlink_Sigs\" \"$UNLINK_SIGS\"
			$lv_Version \"$VERSION\" $gv_Save \"\" $gv_Back \"\")
		else
			KONF_MENU=($gv_Directory \"$O_DIR\" $lv_Mountp \"$M_POINT\"
			$lv_Xattr \"$XATTR\" $lv_Cipher \"${CIPHER:-aes}\"
			$lv_Filename_Encrypt \"$FILENAME_ENCRYPT\"
			$lv_Mountverz \"$MOUNT_PATH\" $lv_Keysize \"${KEY_SIZE:-16}\"
			$lv_Keyring \"$KEYRING\"
			$gv_Key \"$KEY\" $lv_Noauto \"$NOAUTO\"
			\"$lv_Nosigcache\" \"$NO_SIG_CACHE\"
			\"$lv_Passthrough\" \"${PASSTHROUGH:-no}\"
			\"$lv_Unlink_Sigs\" \"$UNLINK_SIGS\"
			$lv_Version \"$VERSION\" $gv_Save \"\" $gv_Back \"\")
		fi
		menubox "$1" "$gv_Configuration" "$gv_Menupoint" "$KONF_MENU"
	}
	## }}}
	conf_menu
	while [ "$gv_Auswahl" ] ; do
		case "$gv_Auswahl" in
			HELP*)	script_help conf_help
				conf_menu "${gv_Auswahl#HELP }"
				;;
			$lv_Xattr)
				# Metadaten in den erweiterten Attributen des Dateisystems speichern?.# {{{
				XATTR_MSG=$(gettext 'Sollen die Metadaten im erweiterten Attribut der kleinen Dateien und nicht in der Header-Region gespeichert werden ($gv_Yes/$gv_No)?')
				yesno "$gv_Configuration" "$XATTR_MSG" "$XATTR"
				if [ "$gv_Auswahl" = yes ] ; then
					XATTR=yes
				else
					XATTR=no
				fi
				## }}}
				conf_menu $lv_Xattr
				;;
			$lv_Cipher)
				# Welcher Chiffrierungstyp soll verwendet werden?# {{{
				CIPHER_MSG=$(gettext 'Wählen Sie einen Chiffrierungstyp aus. Standard ist aes.')
				CIPHER_MENU=(aes \"\" arc4 \"\" blowfish \"\" cast5 \"\" cast6 \"\" des3_ede \"\" twofish \"\")
				menubox "${CIPHER:-aes}" "$gv_Configuration" "$CIPHER_MSG" "$CIPHER_MENU"
				# Auswahl anbieten
				while [ -n "$gv_Auswahl" ] ; do
					case "$gv_Auswahl" in
						HELP*)	script_help conf_help
							menubox "${gv_Auswahl#HELP }" "$gv_Configuration" "$CIPHER_MSG" "$CIPHER_MENU"
							;;
						*)
							# Auswahl übernehmen
							CIPHER="$gv_Auswahl"
							break
							;;
					esac
				done
				## }}}
				conf_menu $lv_Cipher
				;;
			$lv_Filename_Encrypt)
				# Soll die Verschlüsselung der Dateinamen eingeschaltet werden (ja/nein)?# {{{
				FILENAME_ENCRYPT_MSG=$(gettext 'Soll die Verschlüsselung der Dateinamen eingeschaltet werden ($gv_Yes/$gv_No)?')
				yesno "$gv_Configuration" "$FILENAME_ENCRYPT_MSG" "$FILENAME_ENCRYPT"
				if [ "$gv_Auswahl" = yes ] ; then
					FILENAME_ENCRYPT=yes
				else
					FILENAME_ENCRYPT=no
				fi
				## }}}
				conf_menu $lv_Filename_Encrypt
				;;
			$lv_Mountp) 
				# Mountpunkt für das verschlüsselte Verzeichnis auswählen.{{{
				#Auswahl des Verzeichnis das verschlüsselt werden soll.
				dselect "$M_POINT"
				if [ -n "$VERZ" ] ; then
					dselect_check -c "$VERZ"
					if [ -d "$VERZ" ] ; then
						M_POINT="$VERZ"
					fi
				else
					M_POINT=""
				fi
				#}}}
				conf_menu $lv_Mountp
				;;
			$lv_Mountverz) 
				# Mount Verzeichnis eingeben
				mount_path "$MOUNT_PATH"
				conf_menu $lv_Mountverz
				;;
			$lv_Keysize)
				# Schlüsselgrösse auswählen# {{{
				KEY_SIZE_MSG=$(gettext 'Wählen Sie bitte die Grösse des Schlüssels aus. Standard ist 16.')
				KEY_SIZE_MENU=(16 \"\" 24 \"\" 32 \"\")
				menubox "${KEY_SIZE:-16}" "$gv_Configuration" "$KEY_SIZE_MSG" "$KEY_SIZE_MENU"
				while [ "$gv_Auswahl" ] ; do
					case "$gv_Auswahl" in
						HELP*)	script_help conf_help
							menubox "${gv_Auswahl#HELP }" "$gv_Configuration" "$KEY_SIZE_MSG" "$KEY_SIZE_MENU"
							;;
						*)	# Wert übernehmen
							KEY_SIZE="$gv_Auswahl"
							break
							;;
					esac
				done
				## }}}
				conf_menu $lv_Keysize
				;;
			$lv_Keyring)
				# Soll der Kernel Schlüsselring benutzt werden# {{{
				KEYRING_MSG=$(gettext 'Soll für das einbinden des verschlüsselten Laufwerks der Kernel Shlüsselring benutzt werden ($gv_Yes/$gv_No)?')
				yesno "$gv_Configuration" "$KEYRING_MSG" "$KEYRING"
				if [ "$gv_Auswahl" = yes ] ; then
					KEYRING=yes
				else
					KEYRING=no
				fi
				## }}}
				conf_menu $lv_Keyring
				;;
			$lv_Keytyp)
				# Welcher Schlüssel Typ soll verwendet werden?# {{{
				## Funktion key_type_menu{{{
				KEY_TYPE_MSG=$(gettext 'Wählen Sie einen Schlüsseltyp aus.')
				key_type_menu() {
					KEY_TYPE_MENU=(passphrase \"\" $gv_Back \"\")
					menubox "$1" "$gv_Configuration" "$KEY_TYPE_MSG" "$KEY_TYPE_MENU"
				}
				## }}}
				# Auswahl anbieten
				key_type_menu "$KEY_TYPE"
				while [ -n "$gv_Auswahl" ] ; do
					case "$gv_Auswahl" in
						HELP*)	script_help keytype_help
							key_type_menu "${gv_Auswahl#HELP }"
							;;
						passphrase)
							# Auswahl übernehmen
							KEY_TYPE="$gv_Auswahl"
							break
							;;
						$gv_Back|*)	break
							;;
					esac
				done
				## }}}
				conf_menu $lv_Keytyp
				;;
			$gv_Key)
				# Schlüssel# {{{
				manage_keys
				## }}}
				conf_menu $gv_Key
				;;
			$lv_Noauto)
				# Auswahl ob beim Bootprozess das Laufwerk gemappt werden soll,# {{{
				# oder erst später manuell (Ja/Nein).
				NOAUTO_MSG=$(gettext 'Soll das verschlüsselte Verzeichnis beim Start des Rechners manuell erstellt werden ($gv_Yes/$gv_No)?')
				yesno "$gv_Configuration" "$NOAUTO_MSG" "$NOAUTO"
				if [ "$gv_Auswahl" = yes ] ; then
					NOAUTO=yes
				else
					NOAUTO=no
				fi
				## }}}
				conf_menu $lv_Noauto
				;;
			$lv_Nosigcache)
				# Soll die Signatur des Schlüssels mit# {{{
				# ~/.ecryptfs/sig-cache.txt nicht verglichen werden? Yes ist gut
				# für nicht interactive Setup Scripte.
				NO_SIG_CACHE_MSG=$(gettext 'Soll die gemountete Schlüssel Signatur nicht mit dem Wert in ~/.ecryptfs/sig-cache.txt verglichen werden ($gv_Yes/$gv_No)?')
				yesno "$gv_Configuration" "$NO_SIG_CACHE_MSG" "$NO_SIG_CACHE"
				if [ "$gv_Auswahl" = yes ] ; then
					NO_SIG_CACHE=yes
				else
					NO_SIG_CACHE=no
				fi
				## }}}
				conf_menu $lv_Nosigcache
				;;
			$lv_Passthrough)
				# Sollen nicht verschlüsselte Dateien# {{{
				# ins ecryptfs durch gereicht werden? Ist gut falls
				# man auch unverschlüsselte Dateien bearbeiten will.
				PASSTHROUGH_MSG=$(gettext 'Sollen nicht verschlüsselte Dateien ins verschlüsselte Dateisystem durch gereicht werden ($gv_Yes/$gv_No)?')
				yesno "$gv_Configuration" "$PASSTHROUGH_MSG" "$PASSTHROUGH"
				if [ "$gv_Auswahl" = yes ] ; then
					PASSTHROUGH=yes
				else
					PASSTHROUGH=no
				fi
				## }}}
				conf_menu $lv_Passthrough
				;;
			$lv_Unlink_Sigs)
				# Soll beim aushängen des Laufwerks die Passphrase# {{{
				# aus dem Kernel Keyring gelöscht werden (yes/no)?
				UNLINK_SIGS_MSG=$(gettext 'Soll beim aushängen des Laufwerks auch die Passphrase aus dem Kernel Schlüsselring gelöscht werden($gv_Yes/$gv_No)?')
				yesno "$gv_Configuration" "$UNLINK_SIGS_MSG" "$UNLINK_SIGS"
				if [ "$gv_Auswahl" = yes ] ; then
					UNLINK_SIGS=yes
				else
					UNLINK_SIGS=no
				fi
				## }}}
				conf_menu $lv_Unlink_Sigs
				;;
			$lv_Version)
				# Soll die Version der verschlüsselten Dateien angezeigt# {{{
				# werden ($gv_Yes/$gv_No)? Ist gut für Backups Tools die erweiterte
				# Attribute des Dateisystems unterstützen.
				VERSION_MSG=$(gettext 'Soll die Version der verschlüsselten Dateien angezeigt werden ($gv_Yes/$gv_No)? Ist gut für Backups Tools die erweiterte Attribute des Dateisystems unterstützen, wie ext2/3.')
				yesno "$gv_Configuration" "$VERSION_MSG" "$VERSION"
				if [ "$gv_Auswahl" = yes ] ; then
					VERSION=yes
				else
					VERSION=no
				fi
				## }}}
				conf_menu $lv_Version
				;;
			$gv_Directory)
				#Auswahl des Verzeichnis das verschlüsselt werden soll.{{{
				dselect "$O_DIR"
				if [ "$VERZ" ] ; then
					dselect_check -c "$VERZ"
					if [ "$VERZ" ] ; then
						O_DIR="$VERZ"
					fi
				else
					O_DIR=""
				fi
				#}}}
				conf_menu $gv_Directory
				;;
			$gv_Save)
				# speichern# {{{
				if [ "$KONF" = yes ] ; then
					autoload -U kwecryptfs_config
					kwecryptfs_config
				else
					# Einstellungen für das verändern von Verzeichnissen.# {{{
					# Schlüsseltyp
					if [ -n "$KEY_OPT" -a -n "$O_DIR" -a -n "$M_POINT" ] ; then
						OPT="ecryptfs_cipher=${CIPHER:-aes},ecryptfs_key_bytes=${KEY_SIZE:-16}"
						if [ "$XATTR" = yes ] ; then
							OPT="${OPT},ecryptfs_xattr=y"
						else
							OPT="${OPT},ecryptfs_xattr=n"
						fi
						if [ "$FILENAME_ENCRYPT" = yes ] ; then
							OPT="${OPT},ecryptfs_enable_filename_crypto=y"
						else
							OPT="${OPT},ecryptfs_enable_filename_crypto=n"
						fi
						if [ "$PASSTHROUGH" = yes ] ; then
							OPT="${OPT},ecryptfs_passthrough=y"
						else
							OPT="${OPT},ecryptfs_passthrough=n"
						fi
						if [ "$NO_SIG_CACHE" = yes ] ; then
							OPT="${OPT},no_sig_cache=y"
						else
							OPT="${OPT},no_sig_cache=n"
						fi
						if [ "$UNLINK_SIGS" = yes ] ; then
							OPT="${OPT},ecryptfs_unlink_sigs"
						fi
						if [ "$VERSION" = yes ] ; then
							OPT="${OPT},ecryptfs_encrcrypted_view=y"
						else
							OPT="${OPT},ecryptfs_encrcrypted_view=n"
						fi
						if [ "$NOAUTO" = yes ] ; then
							OPT="${OPT},noauto,user"
						else
							OPT="${OPT},user"
						fi
						if [ -n "$REST_OPTION" ] ; then
							OPT="${OPT},${REST_OPTION}"
						fi
						# Rechte einstellen
						chmod 700 "$O_DIR" "$M_POINT"
					else
						MSG=$(gettext'Sie müssen erst ein Verzeichnis das chiffriert werden soll, dessen Mountpunkt und natürlich einen Schlüsseltyp und dessen Optionen angeben.')
						msgbox "$gv_Attention" "$MSG"
						return 1
					fi
					## }}}
				fi
				## }}}
				return 0
				;;
			$gv_Back|*)	unset -- KEY
				return 1
				;;
		esac
	done
	return 0
}
## }}}
### Modeline {{{
### vim:ft=zsh:foldmethod=marker
### vim:set ts=4:                                                                               
### }}}
