# Funktion (kwbtrfs_drive_convert), konvertiert ext[234] Dateisysteme nach btrfs.{{{
#
# usage: kwbtrfs_drive_convert
#
kwbtrfs_drive_convert() {
	search_devices -e
	# Funktionen (no_ext_drive_msg), Nachricht das es keine ext[234] Laufwerke gibt.# {{{
	#
	no_ext_drive_msg() {
		MSG=$(gettext 'Es sind keine ext2/3/4 Laufwerke vorhanden um diese nach btrfs zu konvertieren.')
		msgbox "$gv_Info" "$MSG"
	}
	## }}}
	if [[ -n ${NO_BTRFS_DEV[1]} ]] ; then
		unset -- CREATE_OPT
		# Variable# {{{
		lv_Convert=$(gettext 'konvertieren')
		## }}}
		# Funktionen (convert_menu)# {{{
		#
		convert_menu() {
			CONVERT_DRIVE_MENU=($NO_BTRFS_DEV_E)
			CONVERT_DRIVE_TITLE="${lv_Devices}::${lv_Device_Convert}"
			CONVERT_DRIVE_MSG=$(gettext 'Wählen Sie ein Laufwerk aus das nach btrfs konvertiert werden soll.')
			menubox "$1" "$CONVERT_DRIVE_TITLE" "$CONVERT_DRIVE_MSG" "$CONVERT_DRIVE_MENU"
		}
		## }}}
		# Funktionen (convert_create_menu)# {{{
		#
		convert_create_menu() {
			CONVERT_C_MENU=($lv_Options \"\" $lv_Convert \"\" $gv_Back \"\")
			CONVERT_C_TITLE="${lv_Devices}::${gv_Create}::${lv_Convert}"
			menubox "$1" "$CONVERT_C_TITLE" "$gv_Menupoint" "$CONVERT_C_MENU"
		}
		## }}}
		# Funktion (remove_original_metadata), löscht die Metadaten# {{{
		# des original Dateisystems
		#
		# usage: remove_original_metadata
		#
		remove_original_metadata() {
			# Einhägeverzeichnis erstellen
			mkdir ${gv_WorkDir}/mnt &>/dev/null
			# Dateisystem einhängen
			mount -t btrfs $CONVERT_DEV ${gv_WorkDir}/mnt &>/dev/null
			# Metadaten vom original Däisystem löschen
			btrfs subvolume delete ${gv_WorkDir}/mnt/ext2_saved &>/dev/null
			# Dateisystem defragmentieren
			btrfs filesystem defrag -v  -c ${COMPRESS:-zlib} -r -f -t 32M ${gv_WorkDir}/mnt | \
				progressbox "$CONVERT_TITLE" "${lv_Defrag}: ${CONVERT_DEV}..."
			# Metadaten Block Gruppen abgleichen
			btrfs balance start -v -m ${gv_WorkDir}/mnt | \
				progressbox "$CONVERT_TITLE" "${lv_Balance}: ${CONVERT_DEV}..."
			# Dateisystem ausbinden
			umount ${gv_WorkDir}/mnt &>/dev/null
		}
		## }}}
		convert_menu
		while [[ -n $gv_Auswahl ]] ; do
			case $gv_Auswahl in
				HELP*)
					script_help device_convert_help
					convert_menu "${gv_Auswahl#HELP }"
					;;
				/dev/*)
					# Auswahl übernehmen# {{{
					CONVERT_DEV="$gv_Auswahl"
					convert_create_menu
					while [[ -n $gv_Auswahl ]] ; do
						case $gv_Auswahl in
							HELP*)
								script_help device_convert_help
								convert_create_menu "${gv_Auswahl#HELP }"
								;;
							$lv_Options)
								# Optionen für das konvertieren des Laufwerks# {{{
								autoload -U kwbtrfs_create_options
								kwbtrfs_create_options -c btrfs-convert
								## }}}
								convert_create_menu $lv_Options
								;;
							$lv_Convert)
								# Laufwerk konvertieren# {{{
								CONVERT_TITLE=$(gettext 'Konvertierung')
								CONVERT_P_MSG="${CONVERT_TITLE} ${CONVERT_DEV}..."
								CONVERT_MSG=$(gettext 'Soll dieses Laufwerk $CONVERT_DEV wirklich nach btrfs konvertiert werden (${gv_Yes}/${gv_No})?')
								# Formatieren ($gv_Yes/$gv_No)?
								yesno "$CONVERT_TITLE" "$CONVERT_MSG" no
								if [[ $gv_Auswahl == yes ]] ; then
									# Prüfen ob das Laufwerk
									# eingebunden ist und ausbinden.
									mount_check -a $CONVERT_DEV
									if [[ $U_MOUNT == yes ]] ; then
										# Über den Index das Dateisystem herausbekommen
										Index=$NO_BTRFS_DEV[(i)$CONVERT_DEV]
										Fs="${FS[Index]}"
										# fsck auf das zu konvertierende Laufwerk ausführen.
										# fsck.ext[234] -f -y device
										fsck.${Fs} -f -y $CONVERT_DEV &>/dev/null
										# Die Variable CREATE_OPT wurde in der Funktionsdatei
										# kwbtrfs_create_options belegt
										btrfs-convert ${=CREATE_OPT} $CONVERT_DEV | \
											progressbox "$CONVERT_TITLE" "$CONVERT_P_MSG" || \
											(prog_failure ; return 1)
										# original Metadaten löschen?
										if [[ $RMOMETA == $gv_Yes ]] ; then
											remove_original_metadata
										fi
									fi
								fi
								# Laufwerke neu suchen
								search_devices -e
								unset -- CONVERT_DEV
								## }}}
								break
								;;
							*|$gv_Back)
								# zurück
								break
								;;
						esac
					done
					## }}}
					;;
				*|$gv_Back)
					# zurück
					break
					;;
			esac
		done
	else
		no_ext_drive_msg
		return 1
	fi
	return 0
}
#}}}
### Modeline {{{
### vim:ft=zsh:foldmethod=marker
### vim:set ts=4:                                                                               
### }}}
