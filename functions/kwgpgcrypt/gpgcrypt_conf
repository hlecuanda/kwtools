# Funktion gpgcrypt_conf{{{
#
# benötigt die Funktion net_conf
#
# usage: gpgcrypt_conf
gpgcrypt_conf() {
	lv_Default_Keyid=$(gettext 'Standard_Schlüssel_ID')
	lv_Keyserv=$(gettext 'Schlüssel_Server')
	#
	# Falls die Datei $PGP_OPTIONS nicht vorhanden ist Skeleton Datei kopieren.
	if [ ! -f $PGP_OPTIONS ] ; then
		cp $PGP_OPTION_SKEL $PGP_OPTIONS
		# Konfiguration einlesen
		parse_opt
	fi
	# Funktion konf_menue{{{
	konf_menue() {
		MENU=($lv_Keyserv \"$KEY_SERV_ALL\" $lv_Default_Keyid \"$DEFAULT_KEY\"
		$gv_Save \"\" $gv_Back \"\")
		menubox "$1" "$gv_Configuration" "$gv_Menupoint" "$MENU"
	}
	#}}}
	konf_menue
	autoload -U net_conf
	net_conf
	#
	while [ "$gv_Auswahl" ] ; do
		case "$gv_Auswahl" in
			HELP*)	script_help conf_help
				konf_menue "${gv_Auswahl#HELP }"
				;;
			$lv_Keyserv)
				# Schlüssel Server angeben.{{{
				#
				PROTOCOL=${${(s,:,)${KEY_SERV_ALL:-hkps://hkps.pool.sks-keyservers.net}}[1]}
				KEY_SERV=${${${(s,:,)${KEY_SERV_ALL:-hkps://hkps.pool.sks-keyservers.net}}[2]}##*/}
				PORT=${${(s,:,)${KEY_SERV_ALL:-hkps://hkps.pool.sks-keyservers.net}}[3]}
				KEY_TITLE=(${gv_Configuration}::${lv_Keyserv})
				#
				lv_Protocol=$(gettext 'Protokoll')
				lv_Port=$(gettext 'Port')
				lv_Mail_Address=$(gettext 'Mailadresse')
				# Funktion keyserv_menue{{{
				keyserv_menue() {
					if [[ $PROTOCOL == mailto ]] ; then
						MENU=($lv_Protocol \"$PROTOCOL\" $lv_Mail_Address \"$MAIL_ADR\"
						$gv_Save \"\" $gv_Back \"\")
					else
						MENU=($lv_Protocol \"$PROTOCOL\" $lv_Keyserv \"$KEY_SERV\"
						$lv_Port \"$PORT\" $gv_Save \"\" $gv_Back \"\")
					fi
					menubox "$1" "$KEY_TITLE" "$gv_Menupoint" "$MENU"
				}
				#}}}
				keyserv_menue
				while [ "$gv_Auswahl" ] ; do
					case "$gv_Auswahl" in
						HELP*)	script_help keyserv_help
							keyserv_menue "${gv_Auswahl#HELP }"
							;;
						$lv_Protocol)
							# Protokoll auswählen{{{
							Prot=(hkp \"\" hkps \"\" ldap \"\" mailto \"\")
							PROT_MSG=$(gettext 'Wählen Sie hier das Protokoll aus, welches benutzt werden soll.')
							menubox "$PROTOCOL" "$KEY_TITLE" "$PROT_MSG" "$Prot"
							while [ "$gv_Auswahl" ] ; do
								case "$gv_Auswahl" in
									HELP*)	script_help keyserv_help
										menubox "${gv_Auswahl#HELP }" "$KEY_TITLE" "$PROT_MSG" "$Prot"
										;;
									*)	PROTOCOL="$gv_Auswahl"
										break
										;;
								esac
							done
							#}}}
							keyserv_menue $lv_Protocol
							;;
						$lv_Keyserv)
							# Schlüsselserver eingeben{{{
							HOSTNAME_MSG=$(gettext 'Geben Sie hier bitte einen Schlüsselserver ein (z. B. hkps.pool.sks-keyservers.net).')
							conf_hostname -a "$HOSTNAME_MSG" "$KEY_SERV"
							if [ "$gv_Hostname" ] ; then
								KEY_SERV="$gv_Hostname"
							else
								no_input_msg
							fi
							#}}}
							keyserv_menue $lv_Keyserv
							;;
						$lv_Mail_Address)
							# Schlüsselserver eingeben{{{
							MAIL_ADR_MSG=$(gettext 'Geben Sie hier bitte einen E-Mail Schlüsselserver ein (z. B. pgp-public-keys@keys.pgp.net).')
							mail_address "$MAIL_ADR_MSG" "$MAIL_ADR"
							if [ "$gv_Mail_Adr" ] ; then
								MAIL_ADR="$gv_Mail_Adr"
							else
								no_input_msg
							fi
							#}}}
							keyserv_menue $lv_Mail_Address
							;;
						$lv_Port)
							# Port für den Schlüsselserver eingeben{{{
							MSG=$(gettext 'Geben Sie bitte den Port für den Schlüsselserver ein.')
							number_input "$KEY_TITLE" "$MSG" "$PORT"
							if [ "$NUMBER" ] ; then
								PORT="$NUMBER"
							else
								unset -- PORT
							fi
							#}}}
							keyserv_menue $lv_Port
							;;
						$gv_Save)
							if [ "$PROTOCOL" = mailto -a "$MAIL_ADR" ] ; then
								KEY_SERV_ALL="${PROTOCOL}://${MAIL_ADR}"
							elif [ "$KEY_SERV" -a "$PROTOCOL" -a "$PORT" ] ; then
								KEY_SERV_ALL="${PROTOCOL}://${KEY_SERV}:${PORT}"
							elif [ "$KEY_SERV" -a "$PROTOCOL" ] ; then
								KEY_SERV_ALL="${PROTOCOL}://${KEY_SERV}"
							elif [ "$KEY_SERV" ] ; then
								KEY_SERV_ALL="$KEY_SERV"
							else
								MSG=$(gettext 'Sie müssen erst einen Schlüsselserver angeben.')
								msgbox "$gv_Attention" "$MSG"
							fi
							break
							;;
						$gv_Back)	break
							;;
					esac
				done
				#}}}
				konf_menue $lv_Keyserv
				;;
			$lv_Default_Keyid)
				# Standard_Schlüssel_ID auswählen, mit der unterschrieben wird.# {{{
				# belegt die Variablen TRUSTED_KEY und DEFAULT_KEY.
				autoload -U gpg_getkeys_id
				gpg_getkeys_id
				#}}}
				konf_menue $lv_Default_Keyid
				;;
			$lv_Default_Keyid_Long)
				konf_menue $lv_Default_Keyid_Long
				;;
			$gv_Save)
				# Konfiguration speichern
				#
				if [ -n "$DEFAULT_KEY" ] ; then
					gpgcrypt_config
				else
					MSG=$(gettext 'Sie müssen mindestens den Menüpunkt Standard_Schlüssel_ID mit einem Wert belegen.')
					msgbox "$gv_Attention" "$MSG"
				fi
				break
				;;
			$gv_Back)	break
				;;
		esac
	done
}
#}}}
### Modeline {{{
### vim:ft=zsh:foldmethod=marker
### vim:set ts=4:                                                                               
### }}}
